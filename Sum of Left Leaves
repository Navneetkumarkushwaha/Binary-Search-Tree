intituition:
we will use here level order traversal
in level order traversal in queue we will keep extra variable associated with node, named as isleft.
if node.left and node.right is None and isleft is True, then we will add node's value in ans.


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumOfLeftLeaves(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        
        q=[(root,False)]
        self.ans=0
        
        while q:
            
            node,isleft=q.pop()
            
            if isleft and not node.left and not node.right:
                self.ans+=node.val
                
            if node.left:
                q.append((node.left,True))
            if node.right:
                q.append((node.right,False))
        
        return self.ans       
        
