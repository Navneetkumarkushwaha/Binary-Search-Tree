basic intuition is that we will store all nodes values using inorder traversal.
since BST has property that a tree will be BST if
its inorder traversal is sorted array.




# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        if not root.left and not root.right:
            return True
        l=[]
        def inorder(root):
            if root:
                inorder(root.left)
                l.append(root.val)
                inorder(root.right)
        inorder(root)
        if len(l)!=len(set(l)):
            return False
        if l==sorted(l):
            return True
        else:
            return False
        
        
